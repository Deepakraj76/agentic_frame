DELIMITER //
CREATE PROCEDURE CreateEmployeesTable()
BEGIN
    CREATE TABLE IF NOT EXISTS employees (
        employee_id INT AUTO_INCREMENT PRIMARY KEY,
        first_name VARCHAR(50) NOT NULL,
        last_name VARCHAR(50) NOT NULL,
        birth_date DATE,
        hire_date DATE,
        position VARCHAR(50),
        salary DECIMAL(10, 2)
    );
END //
DELIMITER ;


DELIMITER //
CREATE FUNCTION GetEmployeeAge(emp_birth_date DATE) 
RETURNS INT DETERMINISTIC
BEGIN
    DECLARE emp_age INT;
    SET emp_age = TIMESTAMPDIFF(YEAR, emp_birth_date, CURDATE());
    RETURN emp_age;
END //
DELIMITER ;

call CreateEmployeesTable();

CREATE VIEW EmployeeAgeView AS
SELECT employee_id, CONCAT(first_name, ' ', last_name) AS full_name, GetEmployeeAge(birth_date) AS age
FROM employees;

DELIMITER //
CREATE PROCEDURE CreateDepartmentsTable()
BEGIN
    CREATE TABLE IF NOT EXISTS departments (
        department_id INT AUTO_INCREMENT PRIMARY KEY,
        department_name VARCHAR(100) NOT NULL,
        manager_id INT,
        location VARCHAR(100)
    );
END //
DELIMITER ;

DELIMITER //
CREATE FUNCTION GetDepartmentLocation(dept_id INT) 
RETURNS VARCHAR(100) DETERMINISTIC
BEGIN
    DECLARE dept_location VARCHAR(100);
    SELECT location INTO dept_location FROM departments WHERE department_id = dept_id;
    RETURN dept_location;
END //
DELIMITER ;

call CreateDepartmentsTable();

CREATE VIEW DepartmentLocationView AS
SELECT department_id, department_name, GetDepartmentLocation(department_id) AS location
FROM departments;

DELIMITER //
CREATE PROCEDURE CreateProjectsTable()
BEGIN
    CREATE TABLE IF NOT EXISTS projects (
        project_id INT AUTO_INCREMENT PRIMARY KEY,
        project_name VARCHAR(100) NOT NULL,
        start_date DATE,
        end_date DATE,
        budget DECIMAL(15, 2),
        department_id INT,
        FOREIGN KEY (department_id) REFERENCES departments(department_id)
    );
END //
DELIMITER ;


call CreateProjectsTable();

DELIMITER //
CREATE FUNCTION GetProjectDuration(start_date DATE, end_date DATE) 
RETURNS INT DETERMINISTIC
BEGIN
    RETURN DATEDIFF(end_date, start_date);
END //
DELIMITER ;

CREATE VIEW ProjectDurationView AS
SELECT project_id, project_name, budget, GetProjectDuration(start_date, end_date) AS duration
FROM projects;






